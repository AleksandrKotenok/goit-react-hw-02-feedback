{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statBox","stat","FeedbackOptions","options","onLeaveFeedback","btnBox","map","item","button","type","onClick","Section","children","title","section","Notification","message","note","App","state","increment","vote","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,6B,uICGZC,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,cAAC,WAAD,UACGD,EAAQ,GACP,sBAAKE,UAAWC,IAAEC,QAAlB,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,kBAA4BR,KAC5B,oBAAGK,UAAWC,IAAEE,KAAhB,qBAA+BP,KAC/B,oBAAGI,UAAWC,IAAEE,KAAhB,iBAA2BN,KAC3B,oBAAGG,UAAWC,IAAEE,KAAhB,mBAA6BL,KAC7B,oBAAGE,UAAWC,IAAEE,KAAhB,+BAAyCJ,EAAzC,a,gBChBGK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,qBAAKN,UAAWC,IAAEM,OAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,wBACET,UAAWC,IAAES,OACbC,KAAK,SAELC,QAAS,WACPN,EAAgBG,IALpB,SAQGA,GALIA,S,gBCPFI,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBD,M,iBCJMG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,mBAAGlB,UAAWC,IAAEkB,KAAhB,SAAuBD,KCI1BE,E,4MAMJC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPyB,UAAY,SAAAC,GAAI,OACd,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAOE,EAAUF,GAAQ,O,EAC1DG,mBAAqB,kBACnB,EAAKL,MAAM1B,KAAO,EAAK0B,MAAMzB,QAAU,EAAKyB,MAAMxB,K,EACpD8B,gCAAkC,kBAChCC,KAAKC,MAAyB,IAAlB,EAAKR,MAAM1B,KAAc,EAAK+B,uB,4CAE5C,WACE,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASyB,OAAOC,KAAKC,KAAKX,OAC1Bf,gBAAiB0B,KAAKV,cAG1B,eAAC,EAAD,CAASP,MAAM,aAAf,UACE,cAAC,EAAD,CACEpB,KAAMqC,KAAKX,MAAM1B,KACjBC,QAASoC,KAAKX,MAAMzB,QACpBC,IAAKmC,KAAKX,MAAMxB,IAChBC,MAAOkC,KAAKN,qBACZ3B,mBAAoBiC,KAAKL,oCAEI,IAA9BK,KAAKN,sBACJ,cAAC,EAAD,CAAcR,QAAQ,mC,GApChBe,aA2CHb,IChDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCN1B9C,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,2B,kBCA/DD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,OAAS,kC,kBCApED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.ed35482e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Notification_note__2vjn2\"};","import { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Statistics/Statistics.module.css';\r\n\r\nexport const Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {total > 0 && (\r\n        <div className={s.statBox}>\r\n          <p className={s.stat}>Good:{good}</p>\r\n          <p className={s.stat}>Neutral:{neutral}</p>\r\n          <p className={s.stat}>Bad:{bad}</p>\r\n          <p className={s.stat}>Total:{total}</p>\r\n          <p className={s.stat}>Positive feedback:{positivePercentage}%</p>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.btnBox}>\r\n      {options.map(item => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          key={item}\r\n          onClick={() => {\r\n            onLeaveFeedback(item);\r\n          }}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Section/Section.module.css';\r\n\r\nexport const Section = ({ children, title }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Notification/Notification.module.css';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <p className={s.note}>{message}</p>;\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import { Statistics } from '../Statistics/Statistics';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.string,\n  };\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  increment = vote =>\n    this.setState(prevState => ({ [vote]: prevState[vote] + 1 }));\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good * 100) / this.countTotalFeedback());\n\n  render() {\n    return (\n      <Fragment>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.increment}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n          {this.countTotalFeedback() === 0 && (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statBox\":\"Statistics_statBox__27Y6P\",\"stat\":\"Statistics_stat__zRngo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBox\":\"FeedbackOptions_btnBox__2Cgmp\",\"button\":\"FeedbackOptions_button__3hHNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3M8G5\",\"title\":\"Section_title__31ZKh\"};"],"sourceRoot":""}